{"version":3,"sources":["dataGrid.js","App.js","index.js"],"names":["DataGridDemo","props","useState","query","setQuery","rows","id","values","data","FirstName","LastName","Email","style","position","top","width","label","variant","onChange","e","target","value","height","margin","textAlign","xs","length","filter","el","includes","MyDataGrid","columns","field","headerName","columnWidth","pageSize","rowsPerPageOptions","disableSelectionOnClick","components","NoRowsOverlay","positon","initialFormData","App","formData","updateFormData","showData","setShowData","handleChange","name","trim","className","Card","maxWidth","padding","CardContent","Typography","gutterBottom","Grid","container","spacing","sm","item","TextField","placeholder","fullWidth","required","type","Button","onClick","preventDefault","console","log","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0363cbf1.chunk.js","sourcesContent":["\nimport { DataGrid } from '@mui/x-data-grid';\nimport {useState} from 'react';\nimport TextField from '@mui/material/TextField';\n\n//table component\nexport default function DataGridDemo(props) {\n\n  //input query state\n  const [query, setQuery] = useState('');\n\n  const columns = [\n  {field: 'id', headerName: 'ID', width: 90 },\n  {field: 'values',headerName:'Values', width:150},\n  {field: 'data',headerName:'Data', width:150},\n\n];\nconst rows = [\n  { id: 1, values: 'First Name', data: `${props.data.FirstName}`  },\n  { id: 2, values: 'Last name', data: `${props.data.LastName}`},\n  { id: 3, values: 'Email', data: `${props.data.Email}`}\n];\n\n//input query\nfunction handleChange(e){\n  setQuery(e.target.value);\n  \n}\n\n// custom search filter \nfunction MyDataGrid(rows, query) {\n  if(query.length === 0) return rows;\n  return rows.filter(function(el){\n    return el.values.includes(query) || el.data.includes(query);\n  })\n}\nreturn(\n  <>\n  <TextField style={{position:'relative',top:'10px', width:'90%'}} label=\"Search\" variant=\"outlined\" onChange={handleChange} />\n  <div style={{ height:'100%' , width: '90%', margin: '0 auto', position:'relative', top: 30, textAlign:'center' }}>\n        <DataGrid xs={12}\n        variant=\"outlined\"\n        rows={MyDataGrid(rows,query)}\n        columns={columns}\n        columnWidth={45}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        disableSelectionOnClick\n        style={{ width:'100%' }}\n        components={{\n          NoRowsOverlay:() => (\n      <div style={{positon:'relative', top:50}}>\n        Custom Filter returns no result\n      </div>\n          )\n    }}\n      />\n  </div> \n  </>\n)\n}\n","import './App.css';\nimport {Typography, Card, Grid, TextField, Button} from '@material-ui/core';\nimport { CardContent } from '@mui/material';\nimport {useState} from 'react';\n//import BasicTable from './Table.js';\nimport DataGridDemo from './dataGrid.js';\n\n\nconst initialFormData = ({\n  FirstName: \"\",\n  LastName: \"\",\n  Email:\"\"\n});\n\nfunction App() {\n \n  const [formData, updateFormData] = useState(initialFormData);\n  const [showData, setShowData] = useState(false);\n  \n  \n  const handleChange = (e) => {\n    updateFormData({\n      ...formData,\n      // Trimming any whitespace\n      [e.target.name]: e.target.value.trim()\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(formData);\n    \n    setShowData(true);\n    // ... submit to API or something\n  }\n\n  return (\n    <div className=\"App\">\n     {/* form using material ui*/}\n     <Card style={{maxWidth:500, margin:\"0 auto\", padding:\"25px 10px\"}}>\n      <CardContent>\n        <Typography gutterBottom variant='h5'>Please Fill the Form</Typography>\n        <form>\n        <Grid container spacing={1}>\n          <Grid xs={12} sm={6} item>\n            <TextField label=\"FirstName\" name=\"FirstName\" placeholder=\"Enter First Name\" variant=\"outlined\" onChange={handleChange} fullWidth required/>\n          </Grid>\n          <Grid xs={12} sm={6} item>\n            <TextField label=\"LastName\" name=\"LastName\" placeholder=\"Enter Last Name\" variant=\"outlined\" onChange={handleChange} fullWidth required/>\n          </Grid>\n          <Grid xs={12} item>\n            <TextField type=\"email\" label=\"Email\" name=\"Email\" placeholder=\"Enter Email\" variant=\"outlined\" onChange={handleChange} fullWidth required/>\n          </Grid>\n          <Grid xs={12} item>\n            <Button type=\"submit\" variant=\"contained\" onClick={handleSubmit} color=\"primary\" fullWidth>Submit</Button>\n          </Grid>\n        </Grid>\n        </form>\n      </CardContent>\n     </Card>\n\n    {/*print table */}\n\n    {showData && <DataGridDemo data={formData}/>}\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}